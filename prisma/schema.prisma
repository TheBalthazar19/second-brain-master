generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  memories Memory[]
  sessions Session[]
  
  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  sessionToken String @unique
  userId    String
  expires   DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("sessions")
}

model Memory {
  id          String   @id @default(cuid())
  title       String
  content     String
  url         String?
  tags        String[] @default([])
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Vector search metadata
  embeddingId String?  @unique
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([createdAt])
  @@map("memories")
}

model ChatSession {
  id        String   @id @default(cuid())
  userId    String   
  title     String   @default("New Chat")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  messages  ChatMessage[]
  
  @@index([userId])
  @@map("chat_sessions")
}

model ChatMessage {
  id            String   @id @default(cuid())
  sessionId     String
  role          String   // 'user' | 'assistant'
  content       String
  references    String[] @default([]) // Memory IDs referenced
  createdAt     DateTime @default(now())
  
  session       ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  
  @@index([sessionId])
  @@map("chat_messages")
}